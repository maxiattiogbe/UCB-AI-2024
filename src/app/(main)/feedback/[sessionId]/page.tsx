"use client";

import FeedbackCard from "@/components/Feedback";
import { humeData } from "@/lib/constants";
import {
  ClerkLoaded,
  ClerkLoading,
  SignInButton,
  SignedIn,
  SignedOut,
  UserButton,
  useUser,
} from "@clerk/nextjs";
import { Button } from "@mui/material";

import { Loader } from "lucide-react";
import { useRouter } from "next/navigation";
// import { useRouter } from "next/router";
import React, { useEffect } from "react";

function FeedbackPage({ params }: { params: { sessionId: string } }) {
  const { isSignedIn, isLoaded, user } = useUser();
  const [feedback, setFeedback] = React.useState(null);
  const [loading, setLoading] = React.useState(true);

  const [realData, setRealData] = React.useState(null);

  // You can use the User for the info

  const router = useRouter();

  const getFeedback = async (data) => {
    console.log("calling getfeedback");
    console.log(data);
    setLoading(true);
    const response = await (
      await fetch("/api/generateFeedback", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(data),
      })
    ).json();

    setFeedback(response.loopOutput);
    setLoading(false);
  };

  const handleScore = async () => {
    console.log("Scoring...");
    const response = await (
      await fetch("/api/score/" + params.sessionId, {
        method: "GET",
        headers: {
          "Content-Type": "application/json",
        },
      })
    ).json();

    console.log("REPONSE: ", response);
    console.log("HUME DATA: ", humeData);
    setRealData(response);

    await getFeedback(realData);
  };

  useEffect(() => {
    if (isLoaded && !isSignedIn) {
      router.push("/");
    }

    handleScore();
  }, [isLoaded, isSignedIn, router]);

  return (
    <div>
      <div className="flex flex-col space-y-8">
        <div>This is the dashboard</div>

        {/* Please make sure replace humeData with Real data!! */}
        {/* <>{JSON.stringify(feedback)}</> */}
        {loading && (
          <Loader className="h-5 w-5 text-muted-foreground animate-spin" />
        )}
        {!!feedback && (
          <FeedbackCard
            imgSrc={feedback.graph}
            title="Hume AI Feedback"
            description="Here is your personalised feedback generated by Hume AI"
            feedback={feedback.keyInsights.discussion}
            imgAlt={feedback.keyInsights.discussion}
          ></FeedbackCard>
        )}
      </div>
    </div>
  );
}

export default FeedbackPage;
